@import "_var";

mat-grid-list {
  height: 600px;
}

app-span-graph {
  height: 100%;
  width: 100%;
}

.span-calc-form {

  .dark-theme {
    background-color: $pageColorDark !important;
  }

}

.toolbar {
  width: 100%;
  margin-bottom: 5px;
  &__title {
    display: block;
  }
  &__separator {
    width: 100%;
  }
  &__print-button {
    display: block;
  }
  &__theme-button {
    margin-left: 10px;
  }
  .dark-theme {
    background-color: $toolbarColorDark;
    color: white;
  }
}

.content-wrapper {
  display: flex;
  justify-content: flex-start;
  min-height: 100vh; // Keeps footer at bottom of page
  flex-direction: row;
  padding: 1rem;
  box-sizing: border-box;
}

.flex-l, 
.flex-r {
  display: flex;
  flex: 1 1 200px;
  &.is-portrait {
    display: none;
  }
}

.grid {
  flex: 2 1 auto;
  display: grid;
  grid-template-columns: repeat(2, minmax(200px, 1fr));
  grid-template-rows: minmax(200px, 2fr) auto;
  gap: 5px;
  height: fit-content;
  max-width: $maxW;
  min-width: $minW;
  &.is-portrait {
    grid-template-columns: minmax(200px, 1fr);
    min-width: unset;
  }
}

// Add border and shadow to components
.input-tile,
.output-tile,
.span-result-tile {
  border-width: 5px;
  border-style: solid;
  border-color: #3f51b5;
  border-radius: 2px;
  box-shadow: 3px 3px 3px #b2b2b2;

  .dark-theme {
    background-color: $FormGroupColorDark;
  }

}

// Grid styling for input elements
.input-tile {
  grid-row: 2;
  grid-column: 1;
  &.is-portrait {
    grid-row: 2;
    grid-column: 1;
  }
}

// Grid styling for output elements
.output-tile {
  grid-row: 2;
  grid-column: 2;
  &.is-portrait {
    grid-row: 3;
    grid-column: 1;
  }
}

.span-result-tile {
  grid-row: 1;
  grid-column: span 2;
  &.is-portrait {
    grid-column: 1;
  }
}

// Styling for input and output boxes and all child elements
.input-tile,
.output-tile {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 0.5em;

  &__r1,
  &__r2 {
    display: flex;
    flex-direction: row;
    span {
      flex: 1 3 10px;
      min-width: 2px;
      max-width: 0.5em;
    }

  }

  &__r1 > *,
  &__r2 > * {
    // padding-left: 0.5rem;
    // padding-right: 0.5rem;
  }

  &__radio-button {
    flex: 0 2 auto;
    max-width: 25%; // No need to have the radio-static button to expand and contract with our flex-box
    padding-bottom: 25px; // We want the radio-static button to be vertically centered with the visible <mat-form-field> element, yet there is a hidden *hint* element below the visible box that skews our center by about 20-25px
    align-self: center;
  }

  &__input {
    flex: 3 1 auto;
    min-width: $inputMinW;

  }

  &__select {
    flex: 4 1 auto;
    // min-width: 15%;
  }

  &__lrv {
    flex: 1 1 auto;

  }

  &__urv {
    flex: 1 1 auto;
  }

  &__slider {
    display: flex;
    padding: 0 0.5rem;
    &--wide {
      width: 100%;
    }
  }
}
